{% if system %}
You are given a trajectory containing observations, reason and actions generated by a student agent solving a text world game. You are a teacher whose goal is to improve how the student solves the game by improving their reason and action at every timestep. 

### Input
You will be provided with a JSON file that logs the student agent's observation, candidate_actions, reason and action at every timestep while playing a text-based game. The student fails to solve the task within the time horizon of the game. 

The structure is an array of objects, containing the following at each timestep:
- timestep: Index of the current timestep
- observation: The observation provided to the student agent
- candidate_actions: The set of allowed actions
- reason: The reason generated by the student agent to justify their action
- action: The action taken by the student agent

You will also be provided the privileged state that contains hidden information that specifies how to solve the task. 

### Task
* Analyze the student trajectory and summarize the mistakes it is making when trying to solve the game
* Generate IMPROVED reason and action for the student at every timestep to guide them towards the goal
* Base your improved reasons solely on the student's historical observations and actions up to each timestep
* Offer GENERAL principles or hints in your improved reasons that explain why the student should prefer your suggested action over their original action. This would help the student generalize better.
* When generating improved reason, action at timestep t, assume that the student has followed their original trajectory up until timestep t. Copy over the original observation at timestep t from the student trajectory. 
* When generating improved action at timestep t, make sure the action is available in the candidate_actions at timestep t. Don't select an action that is not available.
* Don't provide inconsistent corrections from timestep to timestep, that will likely confuse the student. If you are changing your recommended reason or action, base it on the observations made by the student.

Important: Provide GENERAL principles or hints in your improved reasons that explain why the student should prefer your suggested action over their original action. 
* Use common sense rationale to guide the student rather than telling them to directly go to a specific location with no basis
* For example, if the student is exploring the wrong area, instead of stating the object is in a different location, suggest a general principle like, "It might be useful to explore areas because ... ", ".. this item is often found in such places", etc
* By following these steps, you help the student understand the logic behind the actions 
* Also note that you cannot carry more than one item at a time

* You are given additional privileged information that the student does not have. Use this information sparingly for your correction, but mostly rely on the information contained in the student trajectory. Since the student does not have this privileged informaton, any reasoning rooted in this information would be hard for the student to emulate.
* Do NOT rely on the specific IDs stored in the privileged state, because that can change randomly. Instead, do a systematic search starting from id 1 and increasing that, i.e. go to countertop 1, then go to countertop 2 etc
* Objects can randomly change their location, so make sure your reasons would hold even if the locations were to change. 

### Output
The output is a JSON containing a summary and a trajectory with the same length as the input student trajectory as follows:
```json
{
    "summary": your summary of the mistakes the student is making,
    "trajectory": [
    {
        "timestep": Index of the current timestep,
        "original_observation": The original observation made by student agent at timestep t (copy as is from student trajectory),
        "original_reason": The original reason generated by the student at timestep t (copy as is from student trajectory),
        "original_action": The original action the student took at timestep t (copy as is from student trajectory),
        "corrected_reason": The corrected reason that the student should generate,
        "corrected_action": The corrected action that the student should take (chosen from list of candidate_actions at timestep t)
    },
    {
        ...
    }
    ...
    ]
}
```
{% endif %}
{% if not system %}
The student trajectory is below:
{{student_trajectory}}

The privileged state for the task is below:
{{privileged_state}}


Provide the ### Output in the JSON format specified above.
{% endif %}