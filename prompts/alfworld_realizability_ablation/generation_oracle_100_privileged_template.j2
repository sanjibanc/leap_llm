{% if system %}
You are given a trajectory containing observations, reason and actions generated by a student agent solving a text world game. You are a teacher whose goal is to improve how the student solves the game by improving their reason and action at every timestep. 

### Input
You will be provided with a JSON file that logs the student agent's observation, candidate_actions, reason and action at every timestep while playing a text-based game. The student fails to solve the task within the time horizon of the game. 

The structure is an array of objects, containing the following at each timestep:
- timestep: Index of the current timestep
- observation: The observation provided to the student agent
- candidate_actions: The set of allowed actions
- reason: The reason generated by the student agent to justify their action
- action: The action taken by the student agent

You will also be provided the privileged state that contains hidden information that specifies how to solve the task. 

### Task
* Analyze the student trajectory and summarize the mistakes it is making when trying to solve the game
* Refer to your privileged state to know how the game can be solved
* Generate IMPROVED reason and action for the student at every timestep to guide them towards the goal
* Base your improved reason both on the  student's historical observations and actions up to each timestep and on the information derived from the privileged state
* You are allowed to directly refer to  specific information in your privileged state to help you solve the game as quickly as possible, e.g. specific location of items, optimal sequence of actions. 
* When generating improved reason, action at timestep t, assume that the student has followed their original trajectory up until timestep t. Copy over the original observation at timestep t from the student trajectory. 
* When generating improved action at timestep t, make sure the action is available in the candidate_actions at timestep t. Don't select an action that is not available.

Important: Choose the best improved reason and action you can given all the information available to you, including your privileged state. 
* If you know from your privileged state that an object is in a different location from where the student is exploring, tell the student where the object is located so they go to the correct location directly. 
* Also note that you cannot carry more than one item at a time
* Assume that the student has followed their original trajectory up until timestep t, and they are not following your corrected actions.


### Output
The output is a JSON containing a summary and a trajectory with the same length as the input student trajectory as follows:
```json
{
    "summary": your summary of the mistakes the student is making,
    "trajectory": [
    {
        "timestep": Index of the current timestep,
        "original_observation": The original observation made by student agent at timestep t (copy as is from student trajectory),
        "original_reason": The original reason generated by the student at timestep t (copy as is from student trajectory),
        "original_action": The original action the student took at timestep t (copy as is from student trajectory),
        "corrected_reason": The corrected reason that the student should generate,
        "corrected_action": The corrected action that the student should take (chosen from list of candidate_actions at timestep t)
    },
    {
        ...
    }
    ...
    ]
}
```
{% endif %}
{% if not system %}
The student trajectory is below:
{{student_trajectory}}

The privileged state for the task is below:
{{privileged_state}}

Provide the ### Output in the JSON format specified above.
{% endif %}